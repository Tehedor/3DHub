{"ast":null,"code":"var _jsxFileName = \"/home/sergio/Documents/fronted/projectfronted/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport CONFIG from './config/config.js';\n\n// Componenetes vistas de react\nimport NavBar from './NavBar';\nimport Header from './Header';\nimport SearchPage from './SearchPage';\nimport Location from './Location';\nimport Error from './Error';\n\n// Dependencias externas\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Funcionalidades de react\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Routes, Navigation } from 'react-router-dom';\n\n// Importar json de pruebas para el fronted\nimport { printersexample } from './constants/printers';\n\n// Pruebas, habrá que ajustarlo para mandar la infomación desde el backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = CONFIG.server_url;\nfunction App() {\n  _s();\n  // Estado en el que se alamcenan las impresoras\n  const [theprinters, setThePrinters] = useState();\n\n  // Estado en el que muestra el spinner si esta cargando\n  const [loading, setLoading] = useState(true);\n\n  // Estado para el login del diseañdor\n  const [loginDiseñador, setLoginDiseñador] = useState(false);\n\n  // Estado para el login del fabricante\n  const [loginFabricante, setLoginFabricante] = useState(false);\n\n  // Control de Roll\n\n  // Variable que guara la localización en la que se encuentra el diseñdor\n  const [ubicacion, setubicacion] = useState(\"Madrid\");\n\n  // Función que descarga las impresoras, en función de la localización en la que se encuentra\n  const download = async () => {\n    let downloadprinters;\n    // let ubicacion = ubicacion;\n\n    // Poner la manerad para solicitar las impresoras en función de la localizaciónSs\n    if (CONFIG.use_server) {\n      try {\n        const res = await fetch(SERVER_URL);\n        downloadprinters = await res.json();\n      } catch (e) {}\n    } else {\n      downloadprinters = printersexample;\n    }\n    setThePrinters(downloadprinters);\n  };\n  useEffect(() => {\n    setLoading(true);\n    async function fetchData() {\n      await download();\n      setTimeout(() => {\n        setLoading(false);\n      }, 800);\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"loading\",\n        src: process.env.PUBLIC_URL + \"/cxyduck.gif\",\n        className: \"spinner\",\n        alt: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(SearchPage, {\n            theprinters: theprinters.printers,\n            setThePrinters: setThePrinters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n  // (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <code>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n}\n_s(App, \"0p4PF1sZPa2vldSGjnGK4kURUCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","CONFIG","NavBar","Header","SearchPage","Location","Error","useState","useEffect","BrowserRouter","Route","Routes","Navigation","printersexample","jsxDEV","_jsxDEV","SERVER_URL","server_url","App","_s","theprinters","setThePrinters","loading","setLoading","loginDiseñador","setLoginDiseñador","loginFabricante","setLoginFabricante","ubicacion","setubicacion","download","downloadprinters","use_server","res","fetch","json","e","fetchData","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","src","process","env","PUBLIC_URL","alt","path","element","printers","Footer","_c","$RefreshReg$"],"sources":["/home/sergio/Documents/fronted/projectfronted/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport CONFIG from './config/config.js';\n\n\n// Componenetes vistas de react\nimport NavBar from './NavBar';\nimport Header from './Header';\nimport SearchPage from './SearchPage';\nimport Location from './Location';\nimport Error from './Error';\n\n// Dependencias externas\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Funcionalidades de react\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter,Route, Routes, Navigation } from 'react-router-dom';\n\n// Importar json de pruebas para el fronted\nimport {printersexample} from './constants/printers';\n\n\n// Pruebas, habrá que ajustarlo para mandar la infomación desde el backend\nconst SERVER_URL = CONFIG.server_url;\n\nfunction App() {\n\n  // Estado en el que se alamcenan las impresoras\n  const [theprinters, setThePrinters] = useState();\n\n  // Estado en el que muestra el spinner si esta cargando\n  const [loading, setLoading] = useState(true);\n \n  // Estado para el login del diseañdor\n  const [loginDiseñador, setLoginDiseñador] = useState(false);\n  \n  // Estado para el login del fabricante\n  const [loginFabricante, setLoginFabricante] = useState(false);\n\n  // Control de Roll\n\n  // Variable que guara la localización en la que se encuentra el diseñdor\n  const [ubicacion, setubicacion] = useState(\"Madrid\");\n\n  \n  // Función que descarga las impresoras, en función de la localización en la que se encuentra\n  const download = async () => {\n    let downloadprinters;\n    // let ubicacion = ubicacion;\n    \n    // Poner la manerad para solicitar las impresoras en función de la localizaciónSs\n    if(CONFIG.use_server){\n      try {\n        const res = await fetch(SERVER_URL);\n        downloadprinters = await res.json();\n      } catch (e) {\n      }\n    }else{\n      downloadprinters=printersexample;\n    }\n    setThePrinters(downloadprinters);\n    \n  }\n\n\n  useEffect(() => {\n    setLoading(true);\n      async function fetchData() {\n        await download();\n       setTimeout(()=>{\n          setLoading(false);\n        },800);\t\t\n    }\n    fetchData();\n  }, []);\n\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header/>\n        <NavBar/>\n\n        {loading ? <img id=\"loading\" src={process.env.PUBLIC_URL + \"/cxyduck.gif\"} className=\"spinner\" alt=\"spinner\" />:\n\n          <Routes>\n            {/* <Route path=\"/\" element={<SearchPage />} /> */}\n            <Route path=\"/\" element={<SearchPage theprinters={theprinters.printers} setThePrinters={setThePrinters} />} />\n            {/* <Route path=\"/printers/:printerId\" element={<Location theprinters={theprinters.printers}/>}/> */}\n            <Route path=\"/*\" element={<Error/>}/>\n            \n          </Routes>\n        } \n      </div>\n        <Footer></Footer>\n    </BrowserRouter>\n  ); \n  // (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <code>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}